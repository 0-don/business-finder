services:
  business-finder-server:
    container_name: business-finder-server
    networks:
      - proxy
    depends_on:
      - business-finder-db
    build:
      context: ./
      dockerfile: Dockerfile
      target: business-finder-server
    restart: always
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      - GOOGLE_PLACES_API=${GOOGLE_PLACES_API}
      - GOOGLE_MAPS_JAVASCRIPT_API=${GOOGLE_MAPS_JAVASCRIPT_API}

      - DEFAULT_COUNTRY_CODE=${DEFAULT_COUNTRY_CODE}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE}
      - DEFAULT_PLACE_TYPE=${DEFAULT_PLACE_TYPE}
      - DEFAULT_KEYWORDS=${DEFAULT_KEYWORDS}

      - DOCKER=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.business-finder-server.rule=Host(`business-finder.coding.global`)"
      - "traefik.http.routers.business-finder-server.entrypoints=websecure"
      - "traefik.http.routers.business-finder-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.business-finder-server.loadbalancer.server.port=3000"
  business-finder-worker:
    container_name: business-finder-worker
    depends_on:
      - business-finder-db
    networks:
      - proxy
    build:
      context: ./
      dockerfile: Dockerfile
      target: business-finder-worker
    restart: always
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      - GOOGLE_PLACES_API=${GOOGLE_PLACES_API}
      - GOOGLE_MAPS_JAVASCRIPT_API=${GOOGLE_MAPS_JAVASCRIPT_API}

      - DEFAULT_COUNTRY_CODE=${DEFAULT_COUNTRY_CODE}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE}
      - DEFAULT_PLACE_TYPE=${DEFAULT_PLACE_TYPE}
      - DEFAULT_KEYWORDS=${DEFAULT_KEYWORDS}
business-finder-db:
  container_name: business-finder-db
  image: postgis/postgis:latest
  restart: always
  networks:
    - proxy
  ports:
    - 5437:5432
  environment:
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  shm_size: 4g
  deploy:
    resources:
      limits:
        memory: 12g
      reservations:
        memory: 8g
  command: |
    postgres
    -c max_connections=100
    -c shared_buffers=4GB
    -c effective_cache_size=10GB
    -c work_mem=32MB
    -c maintenance_work_mem=512MB
    -c max_worker_processes=8
    -c max_parallel_workers=6
    -c max_parallel_workers_per_gather=2
    -c max_parallel_maintenance_workers=2
    -c random_page_cost=1.1
    -c effective_io_concurrency=200
    -c checkpoint_completion_target=0.9
    -c wal_buffers=16MB
    -c default_statistics_target=100
    -c temp_buffers=32MB
    -c max_wal_size=2GB
    -c min_wal_size=1GB
    -c autovacuum_work_mem=256MB
    -c autovacuum_max_workers=3
    -c synchronous_commit=on
    -c fsync=on
    -c full_page_writes=on
    -c log_min_duration_statement=1000

networks:
  proxy:
    external: false
    name: proxy
